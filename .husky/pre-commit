#!/bin/sh

# npm test

FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')
[ -z "$FILES" ] && exit 0

# Prettify all selected files
echo "$FILES" | xargs ./node_modules/.bin/prettier --ignore-unknown --write

echo -e "\nValidating Javascript with eslint:"

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep "\.jsx\?$\|\.tsx\?$\|\.js$\|\.ts$")
echo "$STAGED_FILES" | xargs ./node_modules/.bin/eslint --fix

echo -e "Javascript validation completed."

# Add back the modified/prettified files to staging
echo "$FILES" | xargs git add
echo "$STAGED_FILES" | xargs git add

# Get the list of staged files in the last commit
files=$(git diff --cached --name-only)

# Regular expression to match desired file types
regex=".jsx?$|.tsx?$|.js$|.ts$|.pre-commit"

# Flag to track if error occurred
error=false

# Check each staged file if it matches the regex
for file in $files
do
    if [[ "$file" =~ $regex ]]; then
        echo "Valid file: $file"
    else
        echo -e "\e[31mError: Invalid file $file - File type not allowed\e[0m"
        error=true
    fi
done

# If error flag is set, prevent the commit
if [ "$error" = true ]; then
    echo -e "\e[31mCommit blocked due to errors. Please fix the issues.\e[0m"
    exit 1
fi

exit 0
